---

version: 2.1

jobs:
  ci:
    # ref: https://circleci.com/docs/2.0/executor-types/?section=executors-and-images#using-docker
    docker:
      # Use the base circle CI image
      - image: "cimg/base:stable"
        auth:
          username: DOCKERHUB_LOGIN
          password: DOCKERHUB_PASSWORD
    steps:
      # TODO set up source and pip caching
      # checkout the git repo
      - checkout

      - run:
          name: "Run tests and code coverage"
          command: |
            pip install -U pip wheel
            pip install poetry
            poetry install
            poetry run python groclient/lib.py -v
            mkdir -p shippable/testresults shippable/codecoverage &&
            poetry run pytest
            --junitxml=shippable/testresults/nosetests.xml
            --cov=groclient
            --cov-report=xml:shippable/codecoverage/coverage.xml
            pip install -r api/client/samples/analogous_years/requirements.txt &&
            poetry run pytest api/client/samples/analogous_years/

      - run:
          name: "Run post build steps"
          when: on_success
          command: |
            poetry install -E docs &&
            poetry run sphinx-build -W --keep-going docs docs/_build/html
            poetry run sphinx-build -b linkcheck docs docs/_build/linkcheck
            git config --global user.email "api-documentation@gro-intelligence.com" &&
            git config --global user.name "Gro Intelligence" &&
            git remote set-url origin git@github.com:<< pipeline.project.git_url >> &&
            poetry run bin/sphinx_push_ghpages.sh
            pip install poetry-dynamic-versioning &&
            poetry build
            if [ "$BRANCH" == "development" -a "$IS_PULL_REQUEST" == "false" ]; then
              poetry config repositories.testpypi https://test.pypi.org/legacy/ &&
              poetry publish -u __token__ -p $TESTPYPI_TOKEN -r testpypi
            fi
            if [ "$IS_RELEASE" == "true" ]; then
              poetry publish -u __token__ -p $PYPI_TOKEN
            fi

workflows:
  ci-workflows:
    jobs:
      - ci

