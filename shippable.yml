language: python

python:
  - 3.7

env:
  global:
    - GROAPI_TOKEN=dummytoken
    # PyPI tokens.
    - secure: JzfuyfFYn5JmDknnMODIjOsNDiiHbwsW6BMsa9FapBE5r2/Va5XX/XZTgA5AGQNveE/7xweb8mZeQ0h9f8C7gQOwyPqyZpgRkB2vKtjp6pQ7WKzm4ty8J99SNchlL5njEENdkOcdW/YSXHspk4INrfkM0otC/7VU5xLMgRQdMzPC1jOnXY28JnMobwvbAHjxAVPKbkO4CbE0Vvia3bc28d8pxf3YTNP6yrHYQAOL20t5T7xKEx0okQg4P5WmGNwqxeOQA8kTWy4lUblIrEUIqGvsBagx4aYUjfClHV8S+unO0mk54V2B9U3o14ysEdHYaQcTTZ+3Ywd9803JfVpBld/Ug+Y55RjDcoQcGs0xUFkrzUiwqplx9Ms1WT3lB+i2tv6SYGjNnTQpRBGgLgOn0AKiB/S89h0OI8kNzRubN3ziv5ZNFdtob3PRmpFg6nc60AiT7gnAsCqvcfMu2kPnaLR9o5O34mXkjWcUv24bOo6UWaEWDRFqwdkwYUAK7ljEL+gsJOew/O54+c9bq2En65vsBubbW9RqK53Fhtqcsi8nQdYnL2/OHni7aKAGdYqajRbqkUHsFLnOGMBys+gMgpM2VgBZFR3e57wVr831fgNs5iQb0j9zKl5FZUfCtAY/4CHEkLBcUziGXgg3zV9BzqO9laJaScDagZba2EJMJKkR2ah4GCfKvAZ8mobcd0ZDGEUjjs7lvgL2pTE6JkFo3wXaXsGgacYPcCRp5aDuh1V/Ux/htSk9RUdAUXAevb/e5ei+p6IDvM1nJp/W86JdRUbz5UKNshopexlwYWOqX3BAgIReMa+QJuUcK0rfZXTAVg6cYwn8sl669WhH4+MeJvc/i/DlY0GmyKkgB3JfwEhYJeqzbTuBnKspODOYNKEm2aQs/t/Lo/HHhEzmMTqxKtULp16L72uiYWLK98EEllxCW0XvUsbeFBA8GiGt0fQqZR5b7xgwqfHS4k54UgjldxOnLGZpM+DqqMEy0Td3dsPkb9zqHOO1aNg7DvDL6enB

build:
  cache: true
  cache_dir_list:
    - /root/.cache/pip
  ci:
    # Environment setup.
    - shippable_retry pip install -U pip wheel
    - shippable_retry pip install poetry
    - shippable_retry poetry install
    # Run doctests.
    - poetry run python groclient/lib.py -v
    # Run tests and code coverage.
    # http://docs.shippable.com/ci/python-continuous-integration/#test-coverage-reports
    - >
      mkdir -p shippable/testresults shippable/codecoverage &&
      poetry run pytest
      --junitxml=shippable/testresults/nosetests.xml
      --cov=groclient
      --cov-report=xml:shippable/codecoverage/coverage.xml
    # Test sample notebook.
    - >
      shippable_retry pip install -r api/client/samples/analogous_years/requirements.txt &&
      poetry run pytest api/client/samples/analogous_years/
  on_success:
    # Build docs and push to gh-pages.
    # Note: git remote set-url is for setting a git url instead of an https
    # one, which is needed so Shippable can be authenticated to push changes.
    - >
      shippable_retry poetry install -E docs &&
      git config --global user.email "api-documentation@gro-intelligence.com" &&
      git config --global user.name "Gro Intelligence" &&
      git remote set-url origin git@github.com:$REPO_FULL_NAME.git &&
      ssh-agent bash -c 'ssh-add /tmp/ssh/00_sub; poetry run bin/sphinx_push_ghpages.sh'
    # Build package.
    # Note: We need to install versioning library outside of the poetry venv.
    # See note in CONTRIBUTING.md
    - >
      pip install poetry-dynamic-versioning &&
      poetry build
    # Publish new development updates to TestPyPI whenever changes are merged
    # to development.
    #
    # Note: for all changes to an in-progress PR, Shippable launches 2 jobs:
    # one for the PR branch, and another for the PR branch merged into
    # development branch. See: https://github.com/Shippable/support/issues/3938#issuecomment-342244497
    # We only want to publish a new package when PRs are actually accepted and
    # merged, which is why we check $IS_PULL_REQUEST.
    - >
      if [ "$BRANCH" == "development" -a "$IS_PULL_REQUEST" == "false" ]; then
        poetry config repositories.testpypi https://test.pypi.org/legacy/ &&
        poetry publish -u __token__ -p $TESTPYPI_TOKEN -r testpypi
      fi
    # Publish new releases to PyPI.
    # Note: requires configuring Shippable for release webhooks:
    # http://docs.shippable.com/ci/trigger-job/#configuring-build-triggers
    - >
      if [ "$IS_RELEASE" == "true" ]; then
        poetry publish -u __token__ -p $PYPI_TOKEN
      fi
