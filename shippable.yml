language: python

python:
  - 3.7

branches:
  except:
    - gh-pages

env:
  global:
    - GROAPI_TOKEN: dummytoken
    - secure: "3t2LN1D8s4LDdgM1GZgGX9uLZa2l/LU92ByV3fyGI2b+qbhppZzhGTAClRSyHWFtLCRXRCxQRrJyP44ktsPTaN7cKaFKHX8iV22GI1LfXXL0n6fMwuJgxvqUO3plGHtC6aTQuYSVxVqdklcN8vyZR/wdS0jDKfTQF8RzOZmKRjQ0Je6za1FHE4Eyl88NXspMxv/g9ywfs3uTVKjpyPvQDvMk3h+6ZDrBr9L6KxXzu3XLxb9Tsu97WXKLXXPq6Cxww6bZFzUZPQLlox5ILvVIV4A642Ul9MJUToIYg7gyV+e64d3Lg/4SlnxmARDcndo79+lDIsSpbbRTfY99MxQs8BgrBeyIIghatWEfOSYBzWe6Z18ttyeTwA5bm5+tBx8qDgOUleHQWXmLz29Xmx6uq5PylgSYvJND1qDaxaws8J0mibf5mEnoUILYzyjN8TdlJHhs2/9IZvkrxqDb4Q7f+J3dYSF52JAkPJdWyKF4qQYgKCo6yKj7zCVSKqIwwss20zDBfBoFh52dquumwI9A8VHhHDXV3lyArGB3vA6jE1zznwK9B0WNmd2NOkrOCM1+ROUyoFeZfBsHb4hSZUUihUBqaxe6ihd+PRhlOxSuxwjlW8ftIL0wmHiB6YYjkmCkdiSKrDL3lTkX7tX+vq7uc/Fy4tjz2zoOw2nYxhLHjUw="


build:
  cache: true
  cache_dir_list:
    - /root/.cache/pip
  ci:
    - shippable_retry pip install poetry
    - shippable_retry poetry install
    # Run doctests
    - poetry run python groclient/lib.py -v
    # Create folders for test and code coverage
    - mkdir -p shippable/testresults
    - mkdir -p shippable/codecoverage
    # Run test and code coverage and output results to the right folder
    - >
      poetry run pytest
      --junitxml=shippable/testresults/nosetests.xml
      --cov=groclient
      --cov-report=xml:shippable/codecoverage/coverage.xml
    - >
      shippable_retry poetry run pip install -r api/client/samples/analogous_years/requirements.txt &&
      poetry run pytest api/client/samples/analogous_years/
  on_success:
    - > # Build docs using sphinx and push to gh-pages
      shippable_retry poetry install -E docs &&
      git config --global user.email "api-documentation@gro-intelligence.com" &&
      git config --global user.name "Gro Intelligence" &&
      git remote set-url origin git@github.com:$REPO_FULL_NAME.git &&
      ssh-agent bash -c 'ssh-add /tmp/ssh/00_sub; sphinx-versioning push -r development docs gh-pages .';
    - > # push a beta build to PyPI when a PR is merged to development, or a release build when a release is tagged.
      if [ $IS_RELEASE == "true" ] || [ $BRANCH == "development" ]; then
        poetry build &&
        poetry config repositories.testpypi https://test.pypi.org/legacy/ &&
        poetry publish -r testpypi --username=__token__ --password="$PYPI_TOKEN"
      fi;